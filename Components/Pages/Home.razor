@page "/"
@attribute [StreamRendering(true)]
@inject IMovieReviewService MovieReviewService

<PageTitle>Index</PageTitle>

<h1 style="font-family: 'Palatino Linotype', 'Book Antiqua', Palatino, serif;
           font-size: 4em;
           color: #000000;
           text-align: center;
           margin-bottom: 50px;
           text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
           background-image: linear-gradient(45deg, #ffffff, #2196F3);
           -webkit-background-clip: text;
           -webkit-text-fill-color: transparent;">
    Movies
</h1>

@if (Movies is null)
{
    <h3>Loading...</h3>
}
else
{
    @for (int x = 0; x <= Movies.Count / 4; x++)
    {
        MovieModel[] movieGroup = Movies.Skip(x * 4).Take(4).ToArray();

        <div class="row">

            @foreach (MovieModel movie in movieGroup)
            {
                <MovieItem Movie="@movie" />
            }

        </div>

    }
}

@code {
    List<MovieModel>? Movies = null;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(2000);
        Movies = MovieReviewService?.GetMovies();
    }
}
